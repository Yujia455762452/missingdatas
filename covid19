## 1、研究数据
data("sleep",package = "VIM")
# > head(sleep)
# BodyWgt BrainWgt NonD Dream Sleep Span Gest Pred Exp Danger
# 1 6654.000   5712.0   NA    NA   3.3 38.6  645    3   5      3
# 2    1.000      6.6  6.3   2.0   8.3  4.5   42    3   1      3
# 3    3.385     44.5   NA    NA  12.5 14.0   60    1   1      1
# 4    0.920      5.7   NA    NA  16.5   NA   25    5   2      3
# 5 2547.000   4603.0  2.1   1.8   3.9 69.0  624    3   5      4
# 6   10.550    179.5  9.1   0.7   9.8 27.0  180    4   4      4

# > str(sleep)
# 'data.frame':	62 obs. of  10 variables:


## 2、Randomly introduce missingness 
is.na(sleep) # 判断每一个数据（集）是否缺失/缺失位置，返回逻辑变量:TRUE对应缺失
complete.cases(sleep) #判断行是否完整
sleep[complete.cases(sleep),]  # 展示所有没有缺失数据的行（样本）
sleep[!complete.cases(sleep),]  # 展示所有有缺失数据的行（样本）


## 3、了解你的数据缺失的情况（探索缺失值）
# install.packages("VIM")
library(VIM)
aggr(sleep,prop=T,numbers=T)  # 了解数据的缺失比例和缺失模式
matrixplot(sleep) # 所有数值被重新定义【0,1】，灰度表示数值大小，灰色代表数值大；红色代表缺失值
mice::md.pattern(sleep) # 最后一行返回的就是缺失数目


## 4、插值
# 方法一：一般插值 
library(Hmisc)
impute(sleep$Dream,mean)   ####平均值
impute(sleep$Dream,median) ####中位数


# 方法二：kNN插值法
library(DMwR)
# ?knnImputation
knn_sleep <- knnImputation(sleep)  # 使用KNN插值
knn_sleep
